// Generated by view binder compiler. Do not edit!
package com.example.pi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnClearOrders;

  @NonNull
  public final Button btnPendingOrders;

  @NonNull
  public final Button btnPreparingOrders;

  @NonNull
  public final Button btnReadyOrders;

  @NonNull
  public final Button btnTestOrder;

  @NonNull
  public final Button btnViewOrders;

  @NonNull
  public final Button btnViewProducts;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView tvOrderStats;

  private ActivityOrderMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnClearOrders, @NonNull Button btnPendingOrders,
      @NonNull Button btnPreparingOrders, @NonNull Button btnReadyOrders,
      @NonNull Button btnTestOrder, @NonNull Button btnViewOrders, @NonNull Button btnViewProducts,
      @NonNull ConstraintLayout main, @NonNull TextView tvOrderStats) {
    this.rootView = rootView;
    this.btnClearOrders = btnClearOrders;
    this.btnPendingOrders = btnPendingOrders;
    this.btnPreparingOrders = btnPreparingOrders;
    this.btnReadyOrders = btnReadyOrders;
    this.btnTestOrder = btnTestOrder;
    this.btnViewOrders = btnViewOrders;
    this.btnViewProducts = btnViewProducts;
    this.main = main;
    this.tvOrderStats = tvOrderStats;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClearOrders;
      Button btnClearOrders = ViewBindings.findChildViewById(rootView, id);
      if (btnClearOrders == null) {
        break missingId;
      }

      id = R.id.btnPendingOrders;
      Button btnPendingOrders = ViewBindings.findChildViewById(rootView, id);
      if (btnPendingOrders == null) {
        break missingId;
      }

      id = R.id.btnPreparingOrders;
      Button btnPreparingOrders = ViewBindings.findChildViewById(rootView, id);
      if (btnPreparingOrders == null) {
        break missingId;
      }

      id = R.id.btnReadyOrders;
      Button btnReadyOrders = ViewBindings.findChildViewById(rootView, id);
      if (btnReadyOrders == null) {
        break missingId;
      }

      id = R.id.btnTestOrder;
      Button btnTestOrder = ViewBindings.findChildViewById(rootView, id);
      if (btnTestOrder == null) {
        break missingId;
      }

      id = R.id.btnViewOrders;
      Button btnViewOrders = ViewBindings.findChildViewById(rootView, id);
      if (btnViewOrders == null) {
        break missingId;
      }

      id = R.id.btnViewProducts;
      Button btnViewProducts = ViewBindings.findChildViewById(rootView, id);
      if (btnViewProducts == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvOrderStats;
      TextView tvOrderStats = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderStats == null) {
        break missingId;
      }

      return new ActivityOrderMainBinding((ConstraintLayout) rootView, btnClearOrders,
          btnPendingOrders, btnPreparingOrders, btnReadyOrders, btnTestOrder, btnViewOrders,
          btnViewProducts, main, tvOrderStats);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

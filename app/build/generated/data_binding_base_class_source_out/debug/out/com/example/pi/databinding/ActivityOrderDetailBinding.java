// Generated by view binder compiler. Do not edit!
package com.example.pi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RecyclerView recyclerViewOrderItems;

  @NonNull
  public final TextView textOrderCode;

  @NonNull
  public final TextView textOrderDate;

  @NonNull
  public final TextView textOrderStatus;

  @NonNull
  public final TextView textOrderTotal;

  private ActivityOrderDetailBinding(@NonNull ScrollView rootView,
      @NonNull RecyclerView recyclerViewOrderItems, @NonNull TextView textOrderCode,
      @NonNull TextView textOrderDate, @NonNull TextView textOrderStatus,
      @NonNull TextView textOrderTotal) {
    this.rootView = rootView;
    this.recyclerViewOrderItems = recyclerViewOrderItems;
    this.textOrderCode = textOrderCode;
    this.textOrderDate = textOrderDate;
    this.textOrderStatus = textOrderStatus;
    this.textOrderTotal = textOrderTotal;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewOrderItems;
      RecyclerView recyclerViewOrderItems = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewOrderItems == null) {
        break missingId;
      }

      id = R.id.textOrderCode;
      TextView textOrderCode = ViewBindings.findChildViewById(rootView, id);
      if (textOrderCode == null) {
        break missingId;
      }

      id = R.id.textOrderDate;
      TextView textOrderDate = ViewBindings.findChildViewById(rootView, id);
      if (textOrderDate == null) {
        break missingId;
      }

      id = R.id.textOrderStatus;
      TextView textOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (textOrderStatus == null) {
        break missingId;
      }

      id = R.id.textOrderTotal;
      TextView textOrderTotal = ViewBindings.findChildViewById(rootView, id);
      if (textOrderTotal == null) {
        break missingId;
      }

      return new ActivityOrderDetailBinding((ScrollView) rootView, recyclerViewOrderItems,
          textOrderCode, textOrderDate, textOrderStatus, textOrderTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.pi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textProductName;

  @NonNull
  public final TextView textQuantity;

  @NonNull
  public final TextView textSubtotal;

  @NonNull
  public final TextView textUnitPrice;

  private ItemOrderBinding(@NonNull CardView rootView, @NonNull TextView textProductName,
      @NonNull TextView textQuantity, @NonNull TextView textSubtotal,
      @NonNull TextView textUnitPrice) {
    this.rootView = rootView;
    this.textProductName = textProductName;
    this.textQuantity = textQuantity;
    this.textSubtotal = textSubtotal;
    this.textUnitPrice = textUnitPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textProductName;
      TextView textProductName = ViewBindings.findChildViewById(rootView, id);
      if (textProductName == null) {
        break missingId;
      }

      id = R.id.textQuantity;
      TextView textQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textQuantity == null) {
        break missingId;
      }

      id = R.id.textSubtotal;
      TextView textSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (textSubtotal == null) {
        break missingId;
      }

      id = R.id.textUnitPrice;
      TextView textUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (textUnitPrice == null) {
        break missingId;
      }

      return new ItemOrderBinding((CardView) rootView, textProductName, textQuantity, textSubtotal,
          textUnitPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
